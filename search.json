[{"path":"https://javiermtzrdz.github.io/tidydelta/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Javier Martínez-Rodríguez Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Javier Martinez-Rodriguez. Author, maintainer, copyright holder.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martinez-Rodriguez J (2024). tidydelta: Estimation Standard Errors using Delta Method. R package version 0.1.0.9000, https://javiermtzrdz.github.io/tidydelta/, https://github.com/JavierMtzRdz/tidydelta.","code":"@Manual{,   title = {tidydelta: Estimation of Standard Errors using Delta Method},   author = {Javier Martinez-Rodriguez},   year = {2024},   note = {R package version 0.1.0.9000, https://javiermtzrdz.github.io/tidydelta/},   url = {https://github.com/JavierMtzRdz/tidydelta}, }"},{"path":"https://javiermtzrdz.github.io/tidydelta/index.html","id":"tidydelta-","dir":"","previous_headings":"","what":"Estimation of Standard Errors using Delta Method","title":"Estimation of Standard Errors using Delta Method","text":"Delta Method implementation estimate standard errors {tidyverse} workflow.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimation of Standard Errors using Delta Method","text":"can install stable version CRAN development version GitHub ","code":"install.packages(\"dplyr\") remotes::install_github(\"JavierMtzRdz/tidydelta\") # Or devtools::install_github(\"JavierMtzRdz/tidydelta\")"},{"path":"https://javiermtzrdz.github.io/tidydelta/index.html","id":"theoretical-background","dir":"","previous_headings":"","what":"Theoretical Background","title":"Estimation of Standard Errors using Delta Method","text":"general terms, Delta Method provides tool approximating behaviour estimator ϕ(Tn)\\phi(T_n) using Taylor Expansion, TnT_n estimator parameter θ\\theta, ϕ\\phi function. derive result, begin observation , according continuous mapping theorem, Tn→ℙθT_n \\xrightarrow{\\mathbb{P}} \\theta implies ϕ(Tn)→ℙϕ(θ)\\phi(T_n) \\xrightarrow{\\mathbb{P}} \\phi(\\theta) assuming ϕ\\phi continuous function (Vaart 2000, 25). observation allows us take step forward decompose theorem DM. Assuming ϕ\\phi continuous also differentiable assuming n(Tn−θ)\\sqrt{n} (T_n - \\theta) converges distribution variable TT sample size nn increases, (Bouchard-Côté n.d., 87) can employ Taylor Expansion show n(ϕ(Tn)−ϕ(θ))≈ϕ′(θ)n(Tn−θ). \\sqrt{n} (\\phi(T_n) - \\phi(\\theta)) \\approx \\phi'(\\theta)\\sqrt{n} (T_n - \\theta). Now, sample size nn becomes larger, expression n(ϕ(Tn)−ϕ(θ))\\sqrt{n} (\\phi(T_n) - \\phi(\\theta)) converges distribution ϕ′(θ)T\\phi'(\\theta)T (Vaart 2000, 25; Bouchard-Côté n.d.). Given previous result, can rearrange equations show n(ϕ(Tn)−ϕ(θ))∼N(0,ϕ′(θ)2σ2) \\sqrt{n} (\\phi(T_n) - \\phi(\\theta)) \\sim N(0, \\phi'(\\theta)^2\\sigma^2) nn grows larger. reason, surprise one primary uses Delta Method approximate variance transformations estimators.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/index.html","id":"the-multivariate-case","dir":"","previous_headings":"Theoretical Background","what":"The Multivariate Case","title":"Estimation of Standard Errors using Delta Method","text":"often encounter scenarios θ\\theta can expressed function one parameter. instance, may interested transformation ϕ\\phi θ=(θ1,…,θk)\\theta = (\\theta_1, \\ldots, \\theta_k) (Zepeda-Tello et al. 2022). case, dealing multivariate parameter space estimator Tn,k=(Yn,1,…,Yn,k)T_{n,k} = (Y_{n,1}, \\ldots, Y_{n,k}) becomes random vector. Consequently, asymptotic behaviour estimator Tn,kT_{n,k} can seen follows (Weisberg 2005, 79–80) n(Tn,k−θ)⤳N(0,Σ). \\sqrt{n} (T_{n,k} - \\theta) \\leadsto N(0, \\Sigma). approximate scenario using Delta Method, need compute vector partial derivatives ϕ(θ)\\phi(\\theta) respect parameter θ1,…,θk\\theta_1, \\ldots, \\theta_k. vector denoted ∇ϕ\\nabla \\phi. vector, can extend Delta Method multivariate case stating asymptotically n(ϕ(Tn,k)−ϕ(θ))⤳N(0,∇θ⊤Σ∇θ). \\sqrt{n} (\\phi(T_{n,k}) - \\phi(\\theta)) \\leadsto N(0, \\nabla_{\\theta}^\\top\\Sigma \\nabla_{\\theta}). equation, ∇θ⊤\\nabla_{\\theta}^\\top represents transpose gradient vector ∇ϕ\\nabla \\phi, Σ\\Sigma covariance matrix random vector TnkT_{nk} (Weisberg 2005, 79–80)., obtain se(θ)=∇θ⊤Σ∇θse(\\theta) = \\sqrt{\\nabla_{\\theta}^\\top\\Sigma \\nabla_{\\theta}}, constitutes function implemented project.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Estimation of Standard Errors using Delta Method","text":"Using tidydelta(), following commands equivalent: Now, data frame divided samples compare transformation sample estimation tidydelta(). real world, need compute Delta Method many samples, shows can incorporated workflow tidyverse.","code":"# Load packages library(tidydelta) library(tidyverse)  # Simulate samples set.seed(547) x <- rnorm(10000, mean = 5, sd = 2) y <- rnorm(10000, mean = 15, sd = 3)  bd <- tibble(x, y)  # Equivalent uses of tidydelta() tidydelta(~ y / x,   conf_lev = .95 ) #> # A tibble: 1 × 6 #>       y     x   T_n    se lower_ci upper_ci #>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> #> 1  15.0  5.02  2.99  1.33    0.378     5.61  tidydelta(~ bd$y / bd$x,   conf_lev = .95 ) #> # A tibble: 1 × 6 #>       y     x   T_n    se lower_ci upper_ci #>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> #> 1  15.0  5.02  2.99  1.33    0.378     5.61 bd %>%   summarise(tidydelta(~ y / x,     conf_lev = .95   )) #> # A tibble: 1 × 6 #>       y     x   T_n    se lower_ci upper_ci #>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> #> 1  15.0  5.02  2.99  1.33    0.378     5.61 (result <- bd %>%   summarise(tidydelta(~ x / y,     conf_lev = .95   ))) #> # A tibble: 1 × 6 #>       x     y   T_n    se lower_ci upper_ci #>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> #> 1  5.02  15.0 0.334 0.149   0.0422    0.626  ggplot() +   geom_histogram(     data = bd %>%       mutate(t = x / y),     aes(x = t)   ) +   geom_vline(aes(     xintercept = result$T_n,     color = \"T_n\"   )) +   geom_vline(     aes(       xintercept = c(         result$lower_ci,         result$upper_ci       ),       color = \"CI\"     ),     linetype = \"dashed\"   ) +   labs(color = element_blank())"},{"path":[]},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/cases_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variables and their names from the formula — cases_ext","title":"Extract variables and their names from the formula — cases_ext","text":"Extract variables names formula","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/cases_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variables and their names from the formula — cases_ext","text":"","code":"cases_ext(formula, mean_dta = NULL, cov_dta = NULL)"},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/cases_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variables and their names from the formula — cases_ext","text":"formula formula object specifying variables interest. mean_dta Vector containing means variables. cov_dta Covariance matrix variables.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/cases_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variables and their names from the formula — cases_ext","text":"list containing objects variables formula","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/ext_bd_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variables from a formula — ext_bd_var","title":"Extract variables from a formula — ext_bd_var","text":"Extracts variables formula string.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/ext_bd_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variables from a formula — ext_bd_var","text":"","code":"ext_bd_var(formula)"},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/ext_bd_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variables from a formula — ext_bd_var","text":"formula formula object character string representing formula.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/ext_bd_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variables from a formula — ext_bd_var","text":"named character vector extracted variables.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/for_to_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a formula to an expression — for_to_exp","title":"Convert a formula to an expression — for_to_exp","text":"Converts formula expression evaluation.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/for_to_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a formula to an expression — for_to_exp","text":"","code":"for_to_exp(formula)"},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/for_to_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a formula to an expression — for_to_exp","text":"formula formula object character string representing formula.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/for_to_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a formula to an expression — for_to_exp","text":"evaluated expression.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/tidydelta.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta Method implementation — tidydelta","title":"Delta Method implementation — tidydelta","text":"Estimates standard errors transformations random variables using Delta method.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/tidydelta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta Method implementation — tidydelta","text":"","code":"tidydelta(   formula,   normality_eval = TRUE,   formula_vars = mean,   mean_dta = NULL,   cov_dta = NULL,   n = NULL,   conf_lev = 0.95 )"},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/tidydelta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delta Method implementation — tidydelta","text":"formula formula object specifying variables interest. normality_eval Logical value run normality test case possible. formula_vars function(s) apply variables formula. mean_dta Vector containing means variables. cov_dta Covariance matrix variables. n Sample size evaluation (case can evaluate confidence intervals different hypnotic sample sizes). conf_lev Confidence level confidence intervals.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/tidydelta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delta Method implementation — tidydelta","text":"tibble columns means, standard errors, optionally, confidence intervals.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/tidydelta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delta Method implementation — tidydelta","text":"","code":"# Equivalent ways to use tidydelta() library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors  x <- rnorm(1000, mean = 5, sd = 2) y <- rnorm(1000, mean = 15, sd = 3)  bd <- tibble(x, y)  tidydelta(~ y / x,   conf_lev = .95 ) #> Error in where_env(vars_select): Object not found in envs.  tidydelta(~ bd$y / bd$x,   conf_lev = .95 ) #> Error in eval(parse(text = x)): object 'bd' not found bd %>%   summarise(tidydelta(~ y / x,     conf_lev = .95   )) #> Error in summarise(., tidydelta(~y/x, conf_lev = 0.95)): ℹ In argument: `tidydelta(~y/x, conf_lev = 0.95)`. #> Caused by error in `where_env()`: #> ! Object not found in envs."},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/where_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursive search of environment — where_env","title":"Recursive search of environment — where_env","text":"Recursive search environment containing object.","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/where_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursive search of environment — where_env","text":"","code":"where_env(name, env = rlang::caller_env())"},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/where_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursive search of environment — where_env","text":"name Object searched env Initial environment search","code":""},{"path":"https://javiermtzrdz.github.io/tidydelta/reference/where_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursive search of environment — where_env","text":"named character vector extracted variables.","code":""},{"path":[]},{"path":"https://javiermtzrdz.github.io/tidydelta/news/index.html","id":"tidydelta-010","dir":"Changelog","previous_headings":"","what":"tidydelta 0.1.0","title":"tidydelta 0.1.0","text":"CRAN release: 2024-07-18 Initial CRAN submission.","code":""}]
